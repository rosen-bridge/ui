logs:
  - type: 'console'
    level: 'info'
ergo:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  explorerUrl: https://api.ergoplatform.com
cardano:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  koiosUrl: https://api.koios.rest/api/v1
  koiosAuthToken:
bitcoin:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  esploraUrl: https://blockstream.info
  rpc:
    url:
    username:
    password:
doge:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  blockcypherUrl: https://api.blockcypher.com
  rpc:
    url:
    # username:
    # password:
ethereum:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  rpcUrl: https://eth-mainnet.public.blastapi.io
binance:
  addresses:
    lock:
    eventTrigger:
    permit:
    fraud:
  tokens:
    rwt:
  initialHeight:
  rpcUrl: https://bsc-mainnet.public.blastapi.io/
  # rpcAuthToken:
postgres:
  url: # postgresql://username:password@host:port/databasename
  logging: false
  useSSL: false
calculator:
  addresses:
    ergo: []
    cardano: []
    bitcoin: []
    doge: []
    ethereum: []
    binance: []
healthCheck:
  ergoScannerWarnDiff: 3
  ergoScannerCriticalDiff: 5
  cardanoScannerWarnDiff: 3
  cardanoScannerCriticalDiff: 5
  bitcoinScannerWarnDiff: 3
  bitcoinScannerCriticalDiff: 5
  ethereumScannerWarnDiff: 3
  ethereumScannerCriticalDiff: 5
  binanceScannerWarnDiff: 3
  binanceScannerCriticalDiff: 5
  interval: 60  #health check update interval (in seconds)
notification:
  discordWebhookUrl:  # discord notification webhook
#  historyCleanupTimeout: # notification history cleanup threshold (in seconds, uses default if not set)
#  windowDurations:
#    hasBeenUnstableForAWhile: # window duration to notify when service has been unstable for a while (in seconds, uses default if not set)
#    hasBeenUnknownForAWhile:  # window duration to notify when service has been in unknown status for a while (in seconds, uses default if not set)
